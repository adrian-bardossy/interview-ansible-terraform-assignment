name: Terraform and Asnsible deployment

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: Terraform running on main branch (fmt, init, validate, plan, apply), Ansible running on main branch to configure the instances
    runs-on: ubuntu-latest

    env:
      TF_VAR_aws_region: eu-west-1

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1 
      
      - name: Install Ansible on GitHub Runner
        run: |
          sudo apt update -y
          sudo apt install -y python3-pip ansible
          ansible --version
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init -reconfigure -backend-config="region=eu-west-1"

      - name: Terraform Validate
        run: terraform validate
      
      - name: Terraform Workspace select or create
        run: |
          terraform workspace list | grep -q "Interview" \
            && terraform workspace select Interview \
            || terraform workspace new Interview


      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply (only on main)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false
      
      - name: Copy SSH key to the Ansible instance
        if: github.ref == 'refs/heads/main'
        run: |
          ANSIBLE_IP=$(terraform output -raw ansible_instance_public_ip)
          chmod 600 ubuntu_KP.pem
          scp -i ubuntu_KP.pem -o StrictHostKeyChecking=no ubuntu_KP.pem ubuntu@$ANSIBLE_IP:/home/ubuntu/
          ssh -i ubuntu_KP.pem -o StrictHostKeyChecking=no ubuntu@$ANSIBLE_IP "\
            sudo mkdir -p /home/ubuntu/ansible && \
            sudo mv /home/ubuntu/ubuntu_KP.pem /home/ubuntu/ansible/ && \
            sudo chown ubuntu:ubuntu /home/ubuntu/ansible/ubuntu_KP.pem && \
            chmod 600 /home/ubuntu/ansible/ubuntu_KP.pem"      
         
      - name: Upload Ansible configuration dir to the ansible instance
        if: github.ref == 'refs/heads/main'
        run: |
          IP=$(terraform output -raw ansible_instance_public_ip)
          chmod 600 ubuntu_KP.pem
          ssh -i ubuntu_KP.pem -o StrictHostKeyChecking=no ubuntu@$IP "\
            sudo mkdir -p /home/ubuntu/ansible && \
            sudo chown -R ubuntu:ubuntu /home/ubuntu/ansible && \
            sudo chmod -R 755 /home/ubuntu/ansible"
          scp -i ubuntu_KP.pem -o StrictHostKeyChecking=no -r ansible/* ubuntu@$IP:/home/ubuntu/ansible/
          
      - name: Generate and upload Ansible inventory
        if: github.ref == 'refs/heads/main'
        run: |
          IP=$(terraform output -raw ansible_instance_public_ip)
          chmod 600 ubuntu_KP.pem
          {
            echo "[nginx]"
            terraform output -json nginx_private_ips | jq -r '.[]'
            echo ""
            echo "[nginx:vars]"
            echo "ansible_user=ubuntu"
            echo "ansible_ssh_private_key_file=/home/ubuntu/ansible/ubuntu_KP.pem"
            echo "ansible_ssh_common_args='-o StrictHostKeyChecking=no'"
          } > inventory.ini
          scp -i ubuntu_KP.pem -o StrictHostKeyChecking=no inventory.ini ubuntu@$IP:/home/ubuntu/
          ssh -i ubuntu_KP.pem -o StrictHostKeyChecking=no ubuntu@$IP "mv inventory.ini ansible/inventory.ini && chmod 644 ansible/inventory.ini"
        
      - name: Wait for Ansible instance bootstrap script to finish and make ansible available
        if: github.ref == 'refs/heads/main'
        run: |
          IP=$(terraform output -raw ansible_instance_public_ip)
          chmod 600 ubuntu_KP.pem
          echo "Waiting for bootrap script to finish on $IP..."
          ssh -i ubuntu_KP.pem -o StrictHostKeyChecking=no ubuntu@$IP "\
            while sudo pgrep cloud-init >/dev/null 2>&1; do \
              echo 'cloud-init still running, waiting 15s...'; sleep 15; \
            done; \
            echo 'cloud-init finished successfully.'"
               
      - name: Run Ansible playbook on the Ansible instance
        if: github.ref == 'refs/heads/main'
        run: |
          IP=$(terraform output -raw ansible_instance_public_ip)
          chmod 600 ubuntu_KP.pem
          ssh -i ubuntu_KP.pem -o StrictHostKeyChecking=no ubuntu@$IP "\
            cd /home/ubuntu/ansible && ansible-playbook -i inventory.ini playbook.yml"
        
          
      
